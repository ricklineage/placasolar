#include <Servo.h>
#include <Adafruit_LiquidCrystal.h>
#include <Wire.h> 
#include <Adafruit_INA219.h> 

int pos1 = 0;
int pos2 = 0;
int pos3 = 0;
int pos4 = 0;
int angulo = 90;
int angulo2 = 90;
int sensorValue1 = 0;
int sensorValue2 = 0;
int sensorValue3 = 0;
int sensorValue4 = 0;
int sensorValue5 = 0;
Servo servo_9;
Servo servo_10;
Adafruit_LiquidCrystal lcd_1(0);
Adafruit_INA219 ina219_0 (0x40);

void setup()
{
servo_9.attach(9);
servo_10.attach(10);
pinMode(A0, INPUT);
pinMode(A1, INPUT);
pinMode(A2, INPUT);
pinMode(A3, INPUT);
Serial.begin(115200);
servo_9.write(angulo);
servo_10.write(angulo2);
Serial.println(angulo); 
Serial.println(angulo2); 
lcd_1.begin(16, 3);

  //testar se o INA esta funcionando  
  	while (!Serial){ 
		delay(1); 
	} 
	uint32_t currentFrequency; //definição de um ponteiro currentFrequency
	Serial.println("Bem vindo"); 
	//Inicializa o INA219, sendo por padrão (32V - 2A)
	if (! ina219_0.begin()) 
	{ 
		Serial.println("Falha ao encontrar o INA219"); 
		while (1) { delay(10); 
	} 
	Serial.println("Medição de corrente e tensão com INA219..."); //confirmação de sucesso
}

void loop()
{
	//fotossensores
	sensorValue1 = analogRead(A0);
	sensorValue2 = analogRead(A1);
	sensorValue3 = analogRead(A2); 
	sensorValue4 = analogRead(A3);
	//Sensor corrente e tensão
	float shuntvoltage = 0; //tensão no shunt
	float busvoltage = 0; //tensão no bus
	float current_mA = 0; //corrente 
	float loadvoltage = 0; //tensão na carga
	float power_mW = 0; //potência
  
	int pos1=map(sensorValue1, 0, 1023, 0, 180);
	int pos2=map(sensorValue2, 0, 1023, 0, 180);
	int pos3=map(sensorValue3, 0, 1023, 0, 180);
	int pos4=map(sensorValue4, 0, 1023, 0, 180);
  
	shuntvoltage = ina219_0.getShuntVoltage_mV(); /* comando para chamar a tensão no shunt */
	busvoltage = ina219_0.getBusVoltage_V(); /* comando para chamar a tensão em bus */
	current_mA = ina219_0.getCurrent_mA(); /* comando para chamar a corrente */
	power_mW = ina219_0.getPower_mW(); /*comando para chamar a potência */
	loadvoltage = busvoltage + (shuntvoltage / 1000);/*comando para chamar a tensão na carga */  
   
  if (pos1 != pos2){
    if (pos1 > pos2){
      if (angulo<160){
     	angulo=angulo+1;}
    } else {  
      	if (angulo>20){
        angulo=angulo-1;}
    } 
  }  
  
    if (pos3 != pos4){
    	if (pos3 > pos4){
     		if (angulo2<160){
     		angulo2=angulo2+1;}
        } else {  
      		if (angulo2>20){
      	angulo2=angulo2-1;}
          }
    }
    servo_9.write(angulo);
    servo_10.write(angulo2);	
    Serial.println(angulo);
    Serial.println(angulo2);
    delay(80);
	
	lcd_1.setCursor(0, 0);
	lcd_1.print("Tensao:");
	lcd_1.setCursor(9, 0);
	lcd_1.print(busvoltage);
	lcd_1.setCursor(0, 1);
	lcd_1.print("Bateria:");	
	lcd_1.setCursor(10, 1);
	lcd_1.print(loadvoltage);
	lcd_1.setCursor(0, 2);
	lcd_1.print("Corrente:");	
	lcd_1.setCursor(11, 2);
	lcd_1.print(current_mA);
    
}
